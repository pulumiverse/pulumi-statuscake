// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package statuscake

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type UptimeCheck struct {
	pulumi.CustomResourceState

	// Number of seconds between checks
	CheckInterval pulumi.IntOutput `pulumi:"checkInterval"`
	// Number of confirmation servers to confirm downtime before an alert is triggered
	Confirmation pulumi.IntPtrOutput `pulumi:"confirmation"`
	// List of contact group IDs
	ContactGroups pulumi.StringArrayOutput `pulumi:"contactGroups"`
	// DNS check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	DnsCheck UptimeCheckDnsCheckPtrOutput `pulumi:"dnsCheck"`
	// HTTP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	HttpCheck UptimeCheckHttpCheckPtrOutput `pulumi:"httpCheck"`
	// ICMP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	IcmpCheck UptimeCheckIcmpCheckPtrOutput `pulumi:"icmpCheck"`
	// List of assigned monitoring locations on which to run checks
	Locations UptimeCheckLocationArrayOutput `pulumi:"locations"`
	// Monitored resource configuration block. The describes server under test
	MonitoredResource UptimeCheckMonitoredResourceOutput `pulumi:"monitoredResource"`
	// Name of the check
	Name pulumi.StringOutput `pulumi:"name"`
	// Whether the check should be run
	Paused pulumi.BoolPtrOutput `pulumi:"paused"`
	// List of regions on which to run checks. The values required for this parameter can be retrieved from the `GET
	// /v1/uptime-locations` endpoint
	Regions pulumi.StringArrayOutput `pulumi:"regions"`
	// List of tags
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// TCP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	TcpCheck UptimeCheckTcpCheckPtrOutput `pulumi:"tcpCheck"`
	// The number of minutes to wait before sending an alert
	TriggerRate pulumi.IntPtrOutput `pulumi:"triggerRate"`
}

// NewUptimeCheck registers a new resource with the given unique name, arguments, and options.
func NewUptimeCheck(ctx *pulumi.Context,
	name string, args *UptimeCheckArgs, opts ...pulumi.ResourceOption) (*UptimeCheck, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CheckInterval == nil {
		return nil, errors.New("invalid value for required argument 'CheckInterval'")
	}
	if args.MonitoredResource == nil {
		return nil, errors.New("invalid value for required argument 'MonitoredResource'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource UptimeCheck
	err := ctx.RegisterResource("statuscake:index/uptimeCheck:UptimeCheck", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUptimeCheck gets an existing UptimeCheck resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUptimeCheck(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UptimeCheckState, opts ...pulumi.ResourceOption) (*UptimeCheck, error) {
	var resource UptimeCheck
	err := ctx.ReadResource("statuscake:index/uptimeCheck:UptimeCheck", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UptimeCheck resources.
type uptimeCheckState struct {
	// Number of seconds between checks
	CheckInterval *int `pulumi:"checkInterval"`
	// Number of confirmation servers to confirm downtime before an alert is triggered
	Confirmation *int `pulumi:"confirmation"`
	// List of contact group IDs
	ContactGroups []string `pulumi:"contactGroups"`
	// DNS check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	DnsCheck *UptimeCheckDnsCheck `pulumi:"dnsCheck"`
	// HTTP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	HttpCheck *UptimeCheckHttpCheck `pulumi:"httpCheck"`
	// ICMP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	IcmpCheck *UptimeCheckIcmpCheck `pulumi:"icmpCheck"`
	// List of assigned monitoring locations on which to run checks
	Locations []UptimeCheckLocation `pulumi:"locations"`
	// Monitored resource configuration block. The describes server under test
	MonitoredResource *UptimeCheckMonitoredResource `pulumi:"monitoredResource"`
	// Name of the check
	Name *string `pulumi:"name"`
	// Whether the check should be run
	Paused *bool `pulumi:"paused"`
	// List of regions on which to run checks. The values required for this parameter can be retrieved from the `GET
	// /v1/uptime-locations` endpoint
	Regions []string `pulumi:"regions"`
	// List of tags
	Tags []string `pulumi:"tags"`
	// TCP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	TcpCheck *UptimeCheckTcpCheck `pulumi:"tcpCheck"`
	// The number of minutes to wait before sending an alert
	TriggerRate *int `pulumi:"triggerRate"`
}

type UptimeCheckState struct {
	// Number of seconds between checks
	CheckInterval pulumi.IntPtrInput
	// Number of confirmation servers to confirm downtime before an alert is triggered
	Confirmation pulumi.IntPtrInput
	// List of contact group IDs
	ContactGroups pulumi.StringArrayInput
	// DNS check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	DnsCheck UptimeCheckDnsCheckPtrInput
	// HTTP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	HttpCheck UptimeCheckHttpCheckPtrInput
	// ICMP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	IcmpCheck UptimeCheckIcmpCheckPtrInput
	// List of assigned monitoring locations on which to run checks
	Locations UptimeCheckLocationArrayInput
	// Monitored resource configuration block. The describes server under test
	MonitoredResource UptimeCheckMonitoredResourcePtrInput
	// Name of the check
	Name pulumi.StringPtrInput
	// Whether the check should be run
	Paused pulumi.BoolPtrInput
	// List of regions on which to run checks. The values required for this parameter can be retrieved from the `GET
	// /v1/uptime-locations` endpoint
	Regions pulumi.StringArrayInput
	// List of tags
	Tags pulumi.StringArrayInput
	// TCP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	TcpCheck UptimeCheckTcpCheckPtrInput
	// The number of minutes to wait before sending an alert
	TriggerRate pulumi.IntPtrInput
}

func (UptimeCheckState) ElementType() reflect.Type {
	return reflect.TypeOf((*uptimeCheckState)(nil)).Elem()
}

type uptimeCheckArgs struct {
	// Number of seconds between checks
	CheckInterval int `pulumi:"checkInterval"`
	// Number of confirmation servers to confirm downtime before an alert is triggered
	Confirmation *int `pulumi:"confirmation"`
	// List of contact group IDs
	ContactGroups []string `pulumi:"contactGroups"`
	// DNS check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	DnsCheck *UptimeCheckDnsCheck `pulumi:"dnsCheck"`
	// HTTP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	HttpCheck *UptimeCheckHttpCheck `pulumi:"httpCheck"`
	// ICMP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	IcmpCheck *UptimeCheckIcmpCheck `pulumi:"icmpCheck"`
	// Monitored resource configuration block. The describes server under test
	MonitoredResource UptimeCheckMonitoredResource `pulumi:"monitoredResource"`
	// Name of the check
	Name *string `pulumi:"name"`
	// Whether the check should be run
	Paused *bool `pulumi:"paused"`
	// List of regions on which to run checks. The values required for this parameter can be retrieved from the `GET
	// /v1/uptime-locations` endpoint
	Regions []string `pulumi:"regions"`
	// List of tags
	Tags []string `pulumi:"tags"`
	// TCP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	TcpCheck *UptimeCheckTcpCheck `pulumi:"tcpCheck"`
	// The number of minutes to wait before sending an alert
	TriggerRate *int `pulumi:"triggerRate"`
}

// The set of arguments for constructing a UptimeCheck resource.
type UptimeCheckArgs struct {
	// Number of seconds between checks
	CheckInterval pulumi.IntInput
	// Number of confirmation servers to confirm downtime before an alert is triggered
	Confirmation pulumi.IntPtrInput
	// List of contact group IDs
	ContactGroups pulumi.StringArrayInput
	// DNS check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	DnsCheck UptimeCheckDnsCheckPtrInput
	// HTTP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	HttpCheck UptimeCheckHttpCheckPtrInput
	// ICMP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	IcmpCheck UptimeCheckIcmpCheckPtrInput
	// Monitored resource configuration block. The describes server under test
	MonitoredResource UptimeCheckMonitoredResourceInput
	// Name of the check
	Name pulumi.StringPtrInput
	// Whether the check should be run
	Paused pulumi.BoolPtrInput
	// List of regions on which to run checks. The values required for this parameter can be retrieved from the `GET
	// /v1/uptime-locations` endpoint
	Regions pulumi.StringArrayInput
	// List of tags
	Tags pulumi.StringArrayInput
	// TCP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
	TcpCheck UptimeCheckTcpCheckPtrInput
	// The number of minutes to wait before sending an alert
	TriggerRate pulumi.IntPtrInput
}

func (UptimeCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*uptimeCheckArgs)(nil)).Elem()
}

type UptimeCheckInput interface {
	pulumi.Input

	ToUptimeCheckOutput() UptimeCheckOutput
	ToUptimeCheckOutputWithContext(ctx context.Context) UptimeCheckOutput
}

func (*UptimeCheck) ElementType() reflect.Type {
	return reflect.TypeOf((**UptimeCheck)(nil)).Elem()
}

func (i *UptimeCheck) ToUptimeCheckOutput() UptimeCheckOutput {
	return i.ToUptimeCheckOutputWithContext(context.Background())
}

func (i *UptimeCheck) ToUptimeCheckOutputWithContext(ctx context.Context) UptimeCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UptimeCheckOutput)
}

// UptimeCheckArrayInput is an input type that accepts UptimeCheckArray and UptimeCheckArrayOutput values.
// You can construct a concrete instance of `UptimeCheckArrayInput` via:
//
//	UptimeCheckArray{ UptimeCheckArgs{...} }
type UptimeCheckArrayInput interface {
	pulumi.Input

	ToUptimeCheckArrayOutput() UptimeCheckArrayOutput
	ToUptimeCheckArrayOutputWithContext(context.Context) UptimeCheckArrayOutput
}

type UptimeCheckArray []UptimeCheckInput

func (UptimeCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UptimeCheck)(nil)).Elem()
}

func (i UptimeCheckArray) ToUptimeCheckArrayOutput() UptimeCheckArrayOutput {
	return i.ToUptimeCheckArrayOutputWithContext(context.Background())
}

func (i UptimeCheckArray) ToUptimeCheckArrayOutputWithContext(ctx context.Context) UptimeCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UptimeCheckArrayOutput)
}

// UptimeCheckMapInput is an input type that accepts UptimeCheckMap and UptimeCheckMapOutput values.
// You can construct a concrete instance of `UptimeCheckMapInput` via:
//
//	UptimeCheckMap{ "key": UptimeCheckArgs{...} }
type UptimeCheckMapInput interface {
	pulumi.Input

	ToUptimeCheckMapOutput() UptimeCheckMapOutput
	ToUptimeCheckMapOutputWithContext(context.Context) UptimeCheckMapOutput
}

type UptimeCheckMap map[string]UptimeCheckInput

func (UptimeCheckMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UptimeCheck)(nil)).Elem()
}

func (i UptimeCheckMap) ToUptimeCheckMapOutput() UptimeCheckMapOutput {
	return i.ToUptimeCheckMapOutputWithContext(context.Background())
}

func (i UptimeCheckMap) ToUptimeCheckMapOutputWithContext(ctx context.Context) UptimeCheckMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UptimeCheckMapOutput)
}

type UptimeCheckOutput struct{ *pulumi.OutputState }

func (UptimeCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UptimeCheck)(nil)).Elem()
}

func (o UptimeCheckOutput) ToUptimeCheckOutput() UptimeCheckOutput {
	return o
}

func (o UptimeCheckOutput) ToUptimeCheckOutputWithContext(ctx context.Context) UptimeCheckOutput {
	return o
}

// Number of seconds between checks
func (o UptimeCheckOutput) CheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *UptimeCheck) pulumi.IntOutput { return v.CheckInterval }).(pulumi.IntOutput)
}

// Number of confirmation servers to confirm downtime before an alert is triggered
func (o UptimeCheckOutput) Confirmation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UptimeCheck) pulumi.IntPtrOutput { return v.Confirmation }).(pulumi.IntPtrOutput)
}

// List of contact group IDs
func (o UptimeCheckOutput) ContactGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UptimeCheck) pulumi.StringArrayOutput { return v.ContactGroups }).(pulumi.StringArrayOutput)
}

// DNS check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
func (o UptimeCheckOutput) DnsCheck() UptimeCheckDnsCheckPtrOutput {
	return o.ApplyT(func(v *UptimeCheck) UptimeCheckDnsCheckPtrOutput { return v.DnsCheck }).(UptimeCheckDnsCheckPtrOutput)
}

// HTTP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
func (o UptimeCheckOutput) HttpCheck() UptimeCheckHttpCheckPtrOutput {
	return o.ApplyT(func(v *UptimeCheck) UptimeCheckHttpCheckPtrOutput { return v.HttpCheck }).(UptimeCheckHttpCheckPtrOutput)
}

// ICMP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
func (o UptimeCheckOutput) IcmpCheck() UptimeCheckIcmpCheckPtrOutput {
	return o.ApplyT(func(v *UptimeCheck) UptimeCheckIcmpCheckPtrOutput { return v.IcmpCheck }).(UptimeCheckIcmpCheckPtrOutput)
}

// List of assigned monitoring locations on which to run checks
func (o UptimeCheckOutput) Locations() UptimeCheckLocationArrayOutput {
	return o.ApplyT(func(v *UptimeCheck) UptimeCheckLocationArrayOutput { return v.Locations }).(UptimeCheckLocationArrayOutput)
}

// Monitored resource configuration block. The describes server under test
func (o UptimeCheckOutput) MonitoredResource() UptimeCheckMonitoredResourceOutput {
	return o.ApplyT(func(v *UptimeCheck) UptimeCheckMonitoredResourceOutput { return v.MonitoredResource }).(UptimeCheckMonitoredResourceOutput)
}

// Name of the check
func (o UptimeCheckOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *UptimeCheck) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Whether the check should be run
func (o UptimeCheckOutput) Paused() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UptimeCheck) pulumi.BoolPtrOutput { return v.Paused }).(pulumi.BoolPtrOutput)
}

// List of regions on which to run checks. The values required for this parameter can be retrieved from the `GET
// /v1/uptime-locations` endpoint
func (o UptimeCheckOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UptimeCheck) pulumi.StringArrayOutput { return v.Regions }).(pulumi.StringArrayOutput)
}

// List of tags
func (o UptimeCheckOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UptimeCheck) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// TCP check configuration block. Only one of `dns_check`, `http_check`, `icmp_check`, and `tcp_check` may be specified
func (o UptimeCheckOutput) TcpCheck() UptimeCheckTcpCheckPtrOutput {
	return o.ApplyT(func(v *UptimeCheck) UptimeCheckTcpCheckPtrOutput { return v.TcpCheck }).(UptimeCheckTcpCheckPtrOutput)
}

// The number of minutes to wait before sending an alert
func (o UptimeCheckOutput) TriggerRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UptimeCheck) pulumi.IntPtrOutput { return v.TriggerRate }).(pulumi.IntPtrOutput)
}

type UptimeCheckArrayOutput struct{ *pulumi.OutputState }

func (UptimeCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UptimeCheck)(nil)).Elem()
}

func (o UptimeCheckArrayOutput) ToUptimeCheckArrayOutput() UptimeCheckArrayOutput {
	return o
}

func (o UptimeCheckArrayOutput) ToUptimeCheckArrayOutputWithContext(ctx context.Context) UptimeCheckArrayOutput {
	return o
}

func (o UptimeCheckArrayOutput) Index(i pulumi.IntInput) UptimeCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UptimeCheck {
		return vs[0].([]*UptimeCheck)[vs[1].(int)]
	}).(UptimeCheckOutput)
}

type UptimeCheckMapOutput struct{ *pulumi.OutputState }

func (UptimeCheckMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UptimeCheck)(nil)).Elem()
}

func (o UptimeCheckMapOutput) ToUptimeCheckMapOutput() UptimeCheckMapOutput {
	return o
}

func (o UptimeCheckMapOutput) ToUptimeCheckMapOutputWithContext(ctx context.Context) UptimeCheckMapOutput {
	return o
}

func (o UptimeCheckMapOutput) MapIndex(k pulumi.StringInput) UptimeCheckOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UptimeCheck {
		return vs[0].(map[string]*UptimeCheck)[vs[1].(string)]
	}).(UptimeCheckOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UptimeCheckInput)(nil)).Elem(), &UptimeCheck{})
	pulumi.RegisterInputType(reflect.TypeOf((*UptimeCheckArrayInput)(nil)).Elem(), UptimeCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UptimeCheckMapInput)(nil)).Elem(), UptimeCheckMap{})
	pulumi.RegisterOutputType(UptimeCheckOutput{})
	pulumi.RegisterOutputType(UptimeCheckArrayOutput{})
	pulumi.RegisterOutputType(UptimeCheckMapOutput{})
}
