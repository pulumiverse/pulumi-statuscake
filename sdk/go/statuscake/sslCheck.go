// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package statuscake

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SslCheck struct {
	pulumi.CustomResourceState

	// Alert configuration block
	AlertConfig SslCheckAlertConfigOutput `pulumi:"alertConfig"`
	// Number of seconds between checks
	CheckInterval pulumi.IntOutput `pulumi:"checkInterval"`
	// List of contact group IDs
	ContactGroups pulumi.StringArrayOutput `pulumi:"contactGroups"`
	// Whether to follow redirects when testing. Disabled by default
	FollowRedirects pulumi.BoolPtrOutput `pulumi:"followRedirects"`
	// Monitored resource configuration block. The describes server under test
	MonitoredResource SslCheckMonitoredResourceOutput `pulumi:"monitoredResource"`
	// Whether the check should be run
	Paused pulumi.BoolPtrOutput `pulumi:"paused"`
	// Custom user agent string set when testing
	UserAgent pulumi.StringPtrOutput `pulumi:"userAgent"`
}

// NewSslCheck registers a new resource with the given unique name, arguments, and options.
func NewSslCheck(ctx *pulumi.Context,
	name string, args *SslCheckArgs, opts ...pulumi.ResourceOption) (*SslCheck, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AlertConfig == nil {
		return nil, errors.New("invalid value for required argument 'AlertConfig'")
	}
	if args.CheckInterval == nil {
		return nil, errors.New("invalid value for required argument 'CheckInterval'")
	}
	if args.MonitoredResource == nil {
		return nil, errors.New("invalid value for required argument 'MonitoredResource'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SslCheck
	err := ctx.RegisterResource("statuscake:index/sslCheck:SslCheck", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSslCheck gets an existing SslCheck resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSslCheck(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SslCheckState, opts ...pulumi.ResourceOption) (*SslCheck, error) {
	var resource SslCheck
	err := ctx.ReadResource("statuscake:index/sslCheck:SslCheck", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SslCheck resources.
type sslCheckState struct {
	// Alert configuration block
	AlertConfig *SslCheckAlertConfig `pulumi:"alertConfig"`
	// Number of seconds between checks
	CheckInterval *int `pulumi:"checkInterval"`
	// List of contact group IDs
	ContactGroups []string `pulumi:"contactGroups"`
	// Whether to follow redirects when testing. Disabled by default
	FollowRedirects *bool `pulumi:"followRedirects"`
	// Monitored resource configuration block. The describes server under test
	MonitoredResource *SslCheckMonitoredResource `pulumi:"monitoredResource"`
	// Whether the check should be run
	Paused *bool `pulumi:"paused"`
	// Custom user agent string set when testing
	UserAgent *string `pulumi:"userAgent"`
}

type SslCheckState struct {
	// Alert configuration block
	AlertConfig SslCheckAlertConfigPtrInput
	// Number of seconds between checks
	CheckInterval pulumi.IntPtrInput
	// List of contact group IDs
	ContactGroups pulumi.StringArrayInput
	// Whether to follow redirects when testing. Disabled by default
	FollowRedirects pulumi.BoolPtrInput
	// Monitored resource configuration block. The describes server under test
	MonitoredResource SslCheckMonitoredResourcePtrInput
	// Whether the check should be run
	Paused pulumi.BoolPtrInput
	// Custom user agent string set when testing
	UserAgent pulumi.StringPtrInput
}

func (SslCheckState) ElementType() reflect.Type {
	return reflect.TypeOf((*sslCheckState)(nil)).Elem()
}

type sslCheckArgs struct {
	// Alert configuration block
	AlertConfig SslCheckAlertConfig `pulumi:"alertConfig"`
	// Number of seconds between checks
	CheckInterval int `pulumi:"checkInterval"`
	// List of contact group IDs
	ContactGroups []string `pulumi:"contactGroups"`
	// Whether to follow redirects when testing. Disabled by default
	FollowRedirects *bool `pulumi:"followRedirects"`
	// Monitored resource configuration block. The describes server under test
	MonitoredResource SslCheckMonitoredResource `pulumi:"monitoredResource"`
	// Whether the check should be run
	Paused *bool `pulumi:"paused"`
	// Custom user agent string set when testing
	UserAgent *string `pulumi:"userAgent"`
}

// The set of arguments for constructing a SslCheck resource.
type SslCheckArgs struct {
	// Alert configuration block
	AlertConfig SslCheckAlertConfigInput
	// Number of seconds between checks
	CheckInterval pulumi.IntInput
	// List of contact group IDs
	ContactGroups pulumi.StringArrayInput
	// Whether to follow redirects when testing. Disabled by default
	FollowRedirects pulumi.BoolPtrInput
	// Monitored resource configuration block. The describes server under test
	MonitoredResource SslCheckMonitoredResourceInput
	// Whether the check should be run
	Paused pulumi.BoolPtrInput
	// Custom user agent string set when testing
	UserAgent pulumi.StringPtrInput
}

func (SslCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sslCheckArgs)(nil)).Elem()
}

type SslCheckInput interface {
	pulumi.Input

	ToSslCheckOutput() SslCheckOutput
	ToSslCheckOutputWithContext(ctx context.Context) SslCheckOutput
}

func (*SslCheck) ElementType() reflect.Type {
	return reflect.TypeOf((**SslCheck)(nil)).Elem()
}

func (i *SslCheck) ToSslCheckOutput() SslCheckOutput {
	return i.ToSslCheckOutputWithContext(context.Background())
}

func (i *SslCheck) ToSslCheckOutputWithContext(ctx context.Context) SslCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslCheckOutput)
}

// SslCheckArrayInput is an input type that accepts SslCheckArray and SslCheckArrayOutput values.
// You can construct a concrete instance of `SslCheckArrayInput` via:
//
//	SslCheckArray{ SslCheckArgs{...} }
type SslCheckArrayInput interface {
	pulumi.Input

	ToSslCheckArrayOutput() SslCheckArrayOutput
	ToSslCheckArrayOutputWithContext(context.Context) SslCheckArrayOutput
}

type SslCheckArray []SslCheckInput

func (SslCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SslCheck)(nil)).Elem()
}

func (i SslCheckArray) ToSslCheckArrayOutput() SslCheckArrayOutput {
	return i.ToSslCheckArrayOutputWithContext(context.Background())
}

func (i SslCheckArray) ToSslCheckArrayOutputWithContext(ctx context.Context) SslCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslCheckArrayOutput)
}

// SslCheckMapInput is an input type that accepts SslCheckMap and SslCheckMapOutput values.
// You can construct a concrete instance of `SslCheckMapInput` via:
//
//	SslCheckMap{ "key": SslCheckArgs{...} }
type SslCheckMapInput interface {
	pulumi.Input

	ToSslCheckMapOutput() SslCheckMapOutput
	ToSslCheckMapOutputWithContext(context.Context) SslCheckMapOutput
}

type SslCheckMap map[string]SslCheckInput

func (SslCheckMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SslCheck)(nil)).Elem()
}

func (i SslCheckMap) ToSslCheckMapOutput() SslCheckMapOutput {
	return i.ToSslCheckMapOutputWithContext(context.Background())
}

func (i SslCheckMap) ToSslCheckMapOutputWithContext(ctx context.Context) SslCheckMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslCheckMapOutput)
}

type SslCheckOutput struct{ *pulumi.OutputState }

func (SslCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslCheck)(nil)).Elem()
}

func (o SslCheckOutput) ToSslCheckOutput() SslCheckOutput {
	return o
}

func (o SslCheckOutput) ToSslCheckOutputWithContext(ctx context.Context) SslCheckOutput {
	return o
}

// Alert configuration block
func (o SslCheckOutput) AlertConfig() SslCheckAlertConfigOutput {
	return o.ApplyT(func(v *SslCheck) SslCheckAlertConfigOutput { return v.AlertConfig }).(SslCheckAlertConfigOutput)
}

// Number of seconds between checks
func (o SslCheckOutput) CheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *SslCheck) pulumi.IntOutput { return v.CheckInterval }).(pulumi.IntOutput)
}

// List of contact group IDs
func (o SslCheckOutput) ContactGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SslCheck) pulumi.StringArrayOutput { return v.ContactGroups }).(pulumi.StringArrayOutput)
}

// Whether to follow redirects when testing. Disabled by default
func (o SslCheckOutput) FollowRedirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SslCheck) pulumi.BoolPtrOutput { return v.FollowRedirects }).(pulumi.BoolPtrOutput)
}

// Monitored resource configuration block. The describes server under test
func (o SslCheckOutput) MonitoredResource() SslCheckMonitoredResourceOutput {
	return o.ApplyT(func(v *SslCheck) SslCheckMonitoredResourceOutput { return v.MonitoredResource }).(SslCheckMonitoredResourceOutput)
}

// Whether the check should be run
func (o SslCheckOutput) Paused() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SslCheck) pulumi.BoolPtrOutput { return v.Paused }).(pulumi.BoolPtrOutput)
}

// Custom user agent string set when testing
func (o SslCheckOutput) UserAgent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslCheck) pulumi.StringPtrOutput { return v.UserAgent }).(pulumi.StringPtrOutput)
}

type SslCheckArrayOutput struct{ *pulumi.OutputState }

func (SslCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SslCheck)(nil)).Elem()
}

func (o SslCheckArrayOutput) ToSslCheckArrayOutput() SslCheckArrayOutput {
	return o
}

func (o SslCheckArrayOutput) ToSslCheckArrayOutputWithContext(ctx context.Context) SslCheckArrayOutput {
	return o
}

func (o SslCheckArrayOutput) Index(i pulumi.IntInput) SslCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SslCheck {
		return vs[0].([]*SslCheck)[vs[1].(int)]
	}).(SslCheckOutput)
}

type SslCheckMapOutput struct{ *pulumi.OutputState }

func (SslCheckMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SslCheck)(nil)).Elem()
}

func (o SslCheckMapOutput) ToSslCheckMapOutput() SslCheckMapOutput {
	return o
}

func (o SslCheckMapOutput) ToSslCheckMapOutputWithContext(ctx context.Context) SslCheckMapOutput {
	return o
}

func (o SslCheckMapOutput) MapIndex(k pulumi.StringInput) SslCheckOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SslCheck {
		return vs[0].(map[string]*SslCheck)[vs[1].(string)]
	}).(SslCheckOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SslCheckInput)(nil)).Elem(), &SslCheck{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslCheckArrayInput)(nil)).Elem(), SslCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslCheckMapInput)(nil)).Elem(), SslCheckMap{})
	pulumi.RegisterOutputType(SslCheckOutput{})
	pulumi.RegisterOutputType(SslCheckArrayOutput{})
	pulumi.RegisterOutputType(SslCheckMapOutput{})
}
