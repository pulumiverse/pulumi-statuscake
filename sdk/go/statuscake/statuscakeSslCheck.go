// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package statuscake

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type StatuscakeSslCheck struct {
	pulumi.CustomResourceState

	// Alert configuration block
	AlertConfig StatuscakeSslCheckAlertConfigOutput `pulumi:"alertConfig"`
	// Number of seconds between checks
	CheckInterval pulumi.IntOutput `pulumi:"checkInterval"`
	// List of contact group IDs
	ContactGroups pulumi.StringArrayOutput `pulumi:"contactGroups"`
	// Whether to follow redirects when testing. Disabled by default
	FollowRedirects pulumi.BoolPtrOutput `pulumi:"followRedirects"`
	// Monitored resource configuration block. The describes server under test
	MonitoredResource StatuscakeSslCheckMonitoredResourceOutput `pulumi:"monitoredResource"`
	// Whether the check should be run
	Paused pulumi.BoolPtrOutput `pulumi:"paused"`
	// Custom user agent string set when testing
	UserAgent pulumi.StringPtrOutput `pulumi:"userAgent"`
}

// NewStatuscakeSslCheck registers a new resource with the given unique name, arguments, and options.
func NewStatuscakeSslCheck(ctx *pulumi.Context,
	name string, args *StatuscakeSslCheckArgs, opts ...pulumi.ResourceOption) (*StatuscakeSslCheck, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AlertConfig == nil {
		return nil, errors.New("invalid value for required argument 'AlertConfig'")
	}
	if args.CheckInterval == nil {
		return nil, errors.New("invalid value for required argument 'CheckInterval'")
	}
	if args.MonitoredResource == nil {
		return nil, errors.New("invalid value for required argument 'MonitoredResource'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource StatuscakeSslCheck
	err := ctx.RegisterResource("statuscake:index/statuscakeSslCheck:StatuscakeSslCheck", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStatuscakeSslCheck gets an existing StatuscakeSslCheck resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStatuscakeSslCheck(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StatuscakeSslCheckState, opts ...pulumi.ResourceOption) (*StatuscakeSslCheck, error) {
	var resource StatuscakeSslCheck
	err := ctx.ReadResource("statuscake:index/statuscakeSslCheck:StatuscakeSslCheck", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StatuscakeSslCheck resources.
type statuscakeSslCheckState struct {
	// Alert configuration block
	AlertConfig *StatuscakeSslCheckAlertConfig `pulumi:"alertConfig"`
	// Number of seconds between checks
	CheckInterval *int `pulumi:"checkInterval"`
	// List of contact group IDs
	ContactGroups []string `pulumi:"contactGroups"`
	// Whether to follow redirects when testing. Disabled by default
	FollowRedirects *bool `pulumi:"followRedirects"`
	// Monitored resource configuration block. The describes server under test
	MonitoredResource *StatuscakeSslCheckMonitoredResource `pulumi:"monitoredResource"`
	// Whether the check should be run
	Paused *bool `pulumi:"paused"`
	// Custom user agent string set when testing
	UserAgent *string `pulumi:"userAgent"`
}

type StatuscakeSslCheckState struct {
	// Alert configuration block
	AlertConfig StatuscakeSslCheckAlertConfigPtrInput
	// Number of seconds between checks
	CheckInterval pulumi.IntPtrInput
	// List of contact group IDs
	ContactGroups pulumi.StringArrayInput
	// Whether to follow redirects when testing. Disabled by default
	FollowRedirects pulumi.BoolPtrInput
	// Monitored resource configuration block. The describes server under test
	MonitoredResource StatuscakeSslCheckMonitoredResourcePtrInput
	// Whether the check should be run
	Paused pulumi.BoolPtrInput
	// Custom user agent string set when testing
	UserAgent pulumi.StringPtrInput
}

func (StatuscakeSslCheckState) ElementType() reflect.Type {
	return reflect.TypeOf((*statuscakeSslCheckState)(nil)).Elem()
}

type statuscakeSslCheckArgs struct {
	// Alert configuration block
	AlertConfig StatuscakeSslCheckAlertConfig `pulumi:"alertConfig"`
	// Number of seconds between checks
	CheckInterval int `pulumi:"checkInterval"`
	// List of contact group IDs
	ContactGroups []string `pulumi:"contactGroups"`
	// Whether to follow redirects when testing. Disabled by default
	FollowRedirects *bool `pulumi:"followRedirects"`
	// Monitored resource configuration block. The describes server under test
	MonitoredResource StatuscakeSslCheckMonitoredResource `pulumi:"monitoredResource"`
	// Whether the check should be run
	Paused *bool `pulumi:"paused"`
	// Custom user agent string set when testing
	UserAgent *string `pulumi:"userAgent"`
}

// The set of arguments for constructing a StatuscakeSslCheck resource.
type StatuscakeSslCheckArgs struct {
	// Alert configuration block
	AlertConfig StatuscakeSslCheckAlertConfigInput
	// Number of seconds between checks
	CheckInterval pulumi.IntInput
	// List of contact group IDs
	ContactGroups pulumi.StringArrayInput
	// Whether to follow redirects when testing. Disabled by default
	FollowRedirects pulumi.BoolPtrInput
	// Monitored resource configuration block. The describes server under test
	MonitoredResource StatuscakeSslCheckMonitoredResourceInput
	// Whether the check should be run
	Paused pulumi.BoolPtrInput
	// Custom user agent string set when testing
	UserAgent pulumi.StringPtrInput
}

func (StatuscakeSslCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*statuscakeSslCheckArgs)(nil)).Elem()
}

type StatuscakeSslCheckInput interface {
	pulumi.Input

	ToStatuscakeSslCheckOutput() StatuscakeSslCheckOutput
	ToStatuscakeSslCheckOutputWithContext(ctx context.Context) StatuscakeSslCheckOutput
}

func (*StatuscakeSslCheck) ElementType() reflect.Type {
	return reflect.TypeOf((**StatuscakeSslCheck)(nil)).Elem()
}

func (i *StatuscakeSslCheck) ToStatuscakeSslCheckOutput() StatuscakeSslCheckOutput {
	return i.ToStatuscakeSslCheckOutputWithContext(context.Background())
}

func (i *StatuscakeSslCheck) ToStatuscakeSslCheckOutputWithContext(ctx context.Context) StatuscakeSslCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatuscakeSslCheckOutput)
}

// StatuscakeSslCheckArrayInput is an input type that accepts StatuscakeSslCheckArray and StatuscakeSslCheckArrayOutput values.
// You can construct a concrete instance of `StatuscakeSslCheckArrayInput` via:
//
//	StatuscakeSslCheckArray{ StatuscakeSslCheckArgs{...} }
type StatuscakeSslCheckArrayInput interface {
	pulumi.Input

	ToStatuscakeSslCheckArrayOutput() StatuscakeSslCheckArrayOutput
	ToStatuscakeSslCheckArrayOutputWithContext(context.Context) StatuscakeSslCheckArrayOutput
}

type StatuscakeSslCheckArray []StatuscakeSslCheckInput

func (StatuscakeSslCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StatuscakeSslCheck)(nil)).Elem()
}

func (i StatuscakeSslCheckArray) ToStatuscakeSslCheckArrayOutput() StatuscakeSslCheckArrayOutput {
	return i.ToStatuscakeSslCheckArrayOutputWithContext(context.Background())
}

func (i StatuscakeSslCheckArray) ToStatuscakeSslCheckArrayOutputWithContext(ctx context.Context) StatuscakeSslCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatuscakeSslCheckArrayOutput)
}

// StatuscakeSslCheckMapInput is an input type that accepts StatuscakeSslCheckMap and StatuscakeSslCheckMapOutput values.
// You can construct a concrete instance of `StatuscakeSslCheckMapInput` via:
//
//	StatuscakeSslCheckMap{ "key": StatuscakeSslCheckArgs{...} }
type StatuscakeSslCheckMapInput interface {
	pulumi.Input

	ToStatuscakeSslCheckMapOutput() StatuscakeSslCheckMapOutput
	ToStatuscakeSslCheckMapOutputWithContext(context.Context) StatuscakeSslCheckMapOutput
}

type StatuscakeSslCheckMap map[string]StatuscakeSslCheckInput

func (StatuscakeSslCheckMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StatuscakeSslCheck)(nil)).Elem()
}

func (i StatuscakeSslCheckMap) ToStatuscakeSslCheckMapOutput() StatuscakeSslCheckMapOutput {
	return i.ToStatuscakeSslCheckMapOutputWithContext(context.Background())
}

func (i StatuscakeSslCheckMap) ToStatuscakeSslCheckMapOutputWithContext(ctx context.Context) StatuscakeSslCheckMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatuscakeSslCheckMapOutput)
}

type StatuscakeSslCheckOutput struct{ *pulumi.OutputState }

func (StatuscakeSslCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatuscakeSslCheck)(nil)).Elem()
}

func (o StatuscakeSslCheckOutput) ToStatuscakeSslCheckOutput() StatuscakeSslCheckOutput {
	return o
}

func (o StatuscakeSslCheckOutput) ToStatuscakeSslCheckOutputWithContext(ctx context.Context) StatuscakeSslCheckOutput {
	return o
}

// Alert configuration block
func (o StatuscakeSslCheckOutput) AlertConfig() StatuscakeSslCheckAlertConfigOutput {
	return o.ApplyT(func(v *StatuscakeSslCheck) StatuscakeSslCheckAlertConfigOutput { return v.AlertConfig }).(StatuscakeSslCheckAlertConfigOutput)
}

// Number of seconds between checks
func (o StatuscakeSslCheckOutput) CheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *StatuscakeSslCheck) pulumi.IntOutput { return v.CheckInterval }).(pulumi.IntOutput)
}

// List of contact group IDs
func (o StatuscakeSslCheckOutput) ContactGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StatuscakeSslCheck) pulumi.StringArrayOutput { return v.ContactGroups }).(pulumi.StringArrayOutput)
}

// Whether to follow redirects when testing. Disabled by default
func (o StatuscakeSslCheckOutput) FollowRedirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StatuscakeSslCheck) pulumi.BoolPtrOutput { return v.FollowRedirects }).(pulumi.BoolPtrOutput)
}

// Monitored resource configuration block. The describes server under test
func (o StatuscakeSslCheckOutput) MonitoredResource() StatuscakeSslCheckMonitoredResourceOutput {
	return o.ApplyT(func(v *StatuscakeSslCheck) StatuscakeSslCheckMonitoredResourceOutput { return v.MonitoredResource }).(StatuscakeSslCheckMonitoredResourceOutput)
}

// Whether the check should be run
func (o StatuscakeSslCheckOutput) Paused() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StatuscakeSslCheck) pulumi.BoolPtrOutput { return v.Paused }).(pulumi.BoolPtrOutput)
}

// Custom user agent string set when testing
func (o StatuscakeSslCheckOutput) UserAgent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatuscakeSslCheck) pulumi.StringPtrOutput { return v.UserAgent }).(pulumi.StringPtrOutput)
}

type StatuscakeSslCheckArrayOutput struct{ *pulumi.OutputState }

func (StatuscakeSslCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StatuscakeSslCheck)(nil)).Elem()
}

func (o StatuscakeSslCheckArrayOutput) ToStatuscakeSslCheckArrayOutput() StatuscakeSslCheckArrayOutput {
	return o
}

func (o StatuscakeSslCheckArrayOutput) ToStatuscakeSslCheckArrayOutputWithContext(ctx context.Context) StatuscakeSslCheckArrayOutput {
	return o
}

func (o StatuscakeSslCheckArrayOutput) Index(i pulumi.IntInput) StatuscakeSslCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StatuscakeSslCheck {
		return vs[0].([]*StatuscakeSslCheck)[vs[1].(int)]
	}).(StatuscakeSslCheckOutput)
}

type StatuscakeSslCheckMapOutput struct{ *pulumi.OutputState }

func (StatuscakeSslCheckMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StatuscakeSslCheck)(nil)).Elem()
}

func (o StatuscakeSslCheckMapOutput) ToStatuscakeSslCheckMapOutput() StatuscakeSslCheckMapOutput {
	return o
}

func (o StatuscakeSslCheckMapOutput) ToStatuscakeSslCheckMapOutputWithContext(ctx context.Context) StatuscakeSslCheckMapOutput {
	return o
}

func (o StatuscakeSslCheckMapOutput) MapIndex(k pulumi.StringInput) StatuscakeSslCheckOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StatuscakeSslCheck {
		return vs[0].(map[string]*StatuscakeSslCheck)[vs[1].(string)]
	}).(StatuscakeSslCheckOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StatuscakeSslCheckInput)(nil)).Elem(), &StatuscakeSslCheck{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatuscakeSslCheckArrayInput)(nil)).Elem(), StatuscakeSslCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatuscakeSslCheckMapInput)(nil)).Elem(), StatuscakeSslCheckMap{})
	pulumi.RegisterOutputType(StatuscakeSslCheckOutput{})
	pulumi.RegisterOutputType(StatuscakeSslCheckArrayOutput{})
	pulumi.RegisterOutputType(StatuscakeSslCheckMapOutput{})
}
