# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetContactGroupResult',
    'AwaitableGetContactGroupResult',
    'get_contact_group',
    'get_contact_group_output',
]

@pulumi.output_type
class GetContactGroupResult:
    """
    A collection of values returned by getContactGroup.
    """
    def __init__(__self__, email_addresses=None, id=None, integrations=None, mobile_numbers=None, name=None, ping_url=None):
        if email_addresses and not isinstance(email_addresses, list):
            raise TypeError("Expected argument 'email_addresses' to be a list")
        pulumi.set(__self__, "email_addresses", email_addresses)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if integrations and not isinstance(integrations, list):
            raise TypeError("Expected argument 'integrations' to be a list")
        pulumi.set(__self__, "integrations", integrations)
        if mobile_numbers and not isinstance(mobile_numbers, list):
            raise TypeError("Expected argument 'mobile_numbers' to be a list")
        pulumi.set(__self__, "mobile_numbers", mobile_numbers)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if ping_url and not isinstance(ping_url, str):
            raise TypeError("Expected argument 'ping_url' to be a str")
        pulumi.set(__self__, "ping_url", ping_url)

    @property
    @pulumi.getter(name="emailAddresses")
    def email_addresses(self) -> Sequence[str]:
        return pulumi.get(self, "email_addresses")

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def integrations(self) -> Sequence[str]:
        return pulumi.get(self, "integrations")

    @property
    @pulumi.getter(name="mobileNumbers")
    def mobile_numbers(self) -> Sequence[str]:
        return pulumi.get(self, "mobile_numbers")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="pingUrl")
    def ping_url(self) -> str:
        return pulumi.get(self, "ping_url")


class AwaitableGetContactGroupResult(GetContactGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetContactGroupResult(
            email_addresses=self.email_addresses,
            id=self.id,
            integrations=self.integrations,
            mobile_numbers=self.mobile_numbers,
            name=self.name,
            ping_url=self.ping_url)


def get_contact_group(id: Optional[str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetContactGroupResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['id'] = id
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
    __ret__ = pulumi.runtime.invoke('statuscake:index/getContactGroup:getContactGroup', __args__, opts=opts, typ=GetContactGroupResult).value

    return AwaitableGetContactGroupResult(
        email_addresses=__ret__.email_addresses,
        id=__ret__.id,
        integrations=__ret__.integrations,
        mobile_numbers=__ret__.mobile_numbers,
        name=__ret__.name,
        ping_url=__ret__.ping_url)


@_utilities.lift_output_func(get_contact_group)
def get_contact_group_output(id: Optional[pulumi.Input[str]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetContactGroupResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
