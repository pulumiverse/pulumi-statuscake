// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class StatuscakeContactGroup extends pulumi.CustomResource {
    /**
     * Get an existing StatuscakeContactGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StatuscakeContactGroupState, opts?: pulumi.CustomResourceOptions): StatuscakeContactGroup {
        return new StatuscakeContactGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'statuscake:index/statuscakeContactGroup:StatuscakeContactGroup';

    /**
     * Returns true if the given object is an instance of StatuscakeContactGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StatuscakeContactGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StatuscakeContactGroup.__pulumiType;
    }

    /**
     * List of email addresses
     */
    public readonly emailAddresses!: pulumi.Output<string[] | undefined>;
    /**
     * List of integration IDs
     */
    public readonly integrations!: pulumi.Output<string[] | undefined>;
    /**
     * List of international format mobile phone numbers
     */
    public readonly mobileNumbers!: pulumi.Output<string[] | undefined>;
    /**
     * Name of the contact group
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * URL or IP address of an endpoint to push uptime events. Currently this only supports HTTP GET endpoints
     */
    public readonly pingUrl!: pulumi.Output<string | undefined>;

    /**
     * Create a StatuscakeContactGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: StatuscakeContactGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StatuscakeContactGroupArgs | StatuscakeContactGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StatuscakeContactGroupState | undefined;
            resourceInputs["emailAddresses"] = state ? state.emailAddresses : undefined;
            resourceInputs["integrations"] = state ? state.integrations : undefined;
            resourceInputs["mobileNumbers"] = state ? state.mobileNumbers : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pingUrl"] = state ? state.pingUrl : undefined;
        } else {
            const args = argsOrState as StatuscakeContactGroupArgs | undefined;
            resourceInputs["emailAddresses"] = args ? args.emailAddresses : undefined;
            resourceInputs["integrations"] = args ? args.integrations : undefined;
            resourceInputs["mobileNumbers"] = args ? args.mobileNumbers : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pingUrl"] = args ? args.pingUrl : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StatuscakeContactGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StatuscakeContactGroup resources.
 */
export interface StatuscakeContactGroupState {
    /**
     * List of email addresses
     */
    emailAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of integration IDs
     */
    integrations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of international format mobile phone numbers
     */
    mobileNumbers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the contact group
     */
    name?: pulumi.Input<string>;
    /**
     * URL or IP address of an endpoint to push uptime events. Currently this only supports HTTP GET endpoints
     */
    pingUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StatuscakeContactGroup resource.
 */
export interface StatuscakeContactGroupArgs {
    /**
     * List of email addresses
     */
    emailAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of integration IDs
     */
    integrations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of international format mobile phone numbers
     */
    mobileNumbers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the contact group
     */
    name?: pulumi.Input<string>;
    /**
     * URL or IP address of an endpoint to push uptime events. Currently this only supports HTTP GET endpoints
     */
    pingUrl?: pulumi.Input<string>;
}
