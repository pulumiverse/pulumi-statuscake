// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getStatuscakeUptimeMonitoringLocations(args?: GetStatuscakeUptimeMonitoringLocationsArgs, opts?: pulumi.InvokeOptions): Promise<GetStatuscakeUptimeMonitoringLocationsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("statuscake:index/getStatuscakeUptimeMonitoringLocations:getStatuscakeUptimeMonitoringLocations", {
        "regionCode": args.regionCode,
    }, opts);
}

/**
 * A collection of arguments for invoking getStatuscakeUptimeMonitoringLocations.
 */
export interface GetStatuscakeUptimeMonitoringLocationsArgs {
    regionCode?: string;
}

/**
 * A collection of values returned by getStatuscakeUptimeMonitoringLocations.
 */
export interface GetStatuscakeUptimeMonitoringLocationsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly locations: outputs.GetStatuscakeUptimeMonitoringLocationsLocation[];
    readonly regionCode?: string;
}

export function getStatuscakeUptimeMonitoringLocationsOutput(args?: GetStatuscakeUptimeMonitoringLocationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStatuscakeUptimeMonitoringLocationsResult> {
    return pulumi.output(args).apply(a => getStatuscakeUptimeMonitoringLocations(a, opts))
}

/**
 * A collection of arguments for invoking getStatuscakeUptimeMonitoringLocations.
 */
export interface GetStatuscakeUptimeMonitoringLocationsOutputArgs {
    regionCode?: pulumi.Input<string>;
}
