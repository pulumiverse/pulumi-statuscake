// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Statuscake
{
    public static class GetUptimeMonitoringLocations
    {
        public static Task<GetUptimeMonitoringLocationsResult> InvokeAsync(GetUptimeMonitoringLocationsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetUptimeMonitoringLocationsResult>("statuscake:index/getUptimeMonitoringLocations:getUptimeMonitoringLocations", args ?? new GetUptimeMonitoringLocationsArgs(), options.WithDefaults());

        public static Output<GetUptimeMonitoringLocationsResult> Invoke(GetUptimeMonitoringLocationsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetUptimeMonitoringLocationsResult>("statuscake:index/getUptimeMonitoringLocations:getUptimeMonitoringLocations", args ?? new GetUptimeMonitoringLocationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUptimeMonitoringLocationsArgs : Pulumi.InvokeArgs
    {
        [Input("regionCode")]
        public string? RegionCode { get; set; }

        public GetUptimeMonitoringLocationsArgs()
        {
        }
    }

    public sealed class GetUptimeMonitoringLocationsInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("regionCode")]
        public Input<string>? RegionCode { get; set; }

        public GetUptimeMonitoringLocationsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetUptimeMonitoringLocationsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetUptimeMonitoringLocationsLocationResult> Locations;
        public readonly string? RegionCode;

        [OutputConstructor]
        private GetUptimeMonitoringLocationsResult(
            string id,

            ImmutableArray<Outputs.GetUptimeMonitoringLocationsLocationResult> locations,

            string? regionCode)
        {
            Id = id;
            Locations = locations;
            RegionCode = regionCode;
        }
    }
}
