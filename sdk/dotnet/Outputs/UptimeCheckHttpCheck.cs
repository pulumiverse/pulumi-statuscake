// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Statuscake.Outputs
{

    [OutputType]
    public sealed class UptimeCheckHttpCheck
    {
        public readonly Outputs.UptimeCheckHttpCheckBasicAuthentication? BasicAuthentication;
        public readonly Outputs.UptimeCheckHttpCheckContentMatchers? ContentMatchers;
        public readonly bool? EnableCookies;
        public readonly string? FinalEndpoint;
        public readonly bool? FollowRedirects;
        public readonly ImmutableDictionary<string, string>? RequestHeaders;
        public readonly string? RequestMethod;
        public readonly ImmutableDictionary<string, string>? RequestPayload;
        public readonly string? RequestPayloadRaw;
        public readonly ImmutableArray<string> StatusCodes;
        public readonly int? Timeout;
        public readonly string? UserAgent;
        public readonly bool? ValidateSsl;

        [OutputConstructor]
        private UptimeCheckHttpCheck(
            Outputs.UptimeCheckHttpCheckBasicAuthentication? basicAuthentication,

            Outputs.UptimeCheckHttpCheckContentMatchers? contentMatchers,

            bool? enableCookies,

            string? finalEndpoint,

            bool? followRedirects,

            ImmutableDictionary<string, string>? requestHeaders,

            string? requestMethod,

            ImmutableDictionary<string, string>? requestPayload,

            string? requestPayloadRaw,

            ImmutableArray<string> statusCodes,

            int? timeout,

            string? userAgent,

            bool? validateSsl)
        {
            BasicAuthentication = basicAuthentication;
            ContentMatchers = contentMatchers;
            EnableCookies = enableCookies;
            FinalEndpoint = finalEndpoint;
            FollowRedirects = followRedirects;
            RequestHeaders = requestHeaders;
            RequestMethod = requestMethod;
            RequestPayload = requestPayload;
            RequestPayloadRaw = requestPayloadRaw;
            StatusCodes = statusCodes;
            Timeout = timeout;
            UserAgent = userAgent;
            ValidateSsl = validateSsl;
        }
    }
}
