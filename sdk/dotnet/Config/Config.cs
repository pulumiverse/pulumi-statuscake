// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumiverse.Statuscake
{
    public static class Config
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly Pulumi.Config __config = new Pulumi.Config("statuscake");

        private static readonly __Value<string?> _apiToken = new __Value<string?>(() => __config.Get("apiToken") ?? Utilities.GetEnv("STATUSCAKE_API_TOKEN"));
        /// <summary>
        /// The API token for operations. This can also be provided as an environment variable `STATUSCAKE_API_TOKEN`
        /// </summary>
        public static string? ApiToken
        {
            get => _apiToken.Get();
            set => _apiToken.Set(value);
        }

        private static readonly __Value<int?> _maxBackoff = new __Value<int?>(() => __config.GetInt32("maxBackoff"));
        /// <summary>
        /// Maximum backoff period in seconds after failed API calls. This can also be provided as an environment variable
        /// `STATUSCAKE_MAX_BACKOFF`
        /// </summary>
        public static int? MaxBackoff
        {
            get => _maxBackoff.Get();
            set => _maxBackoff.Set(value);
        }

        private static readonly __Value<int?> _minBackoff = new __Value<int?>(() => __config.GetInt32("minBackoff"));
        /// <summary>
        /// Minimum backoff period in seconds after failed API calls. This can also be provided as an environment variable
        /// `STATUSCAKE_MIN_BACKOFF`
        /// </summary>
        public static int? MinBackoff
        {
            get => _minBackoff.Get();
            set => _minBackoff.Set(value);
        }

        private static readonly __Value<int?> _retries = new __Value<int?>(() => __config.GetInt32("retries"));
        /// <summary>
        /// Maximum number of retries to perform when an API request fails. This can also be provided as an environment variable
        /// `STATUSCAKE_RETRIES`
        /// </summary>
        public static int? Retries
        {
            get => _retries.Get();
            set => _retries.Set(value);
        }

        private static readonly __Value<int?> _rps = new __Value<int?>(() => __config.GetInt32("rps"));
        /// <summary>
        /// RPS limit to apply when making calls to the API. This can also be provided as an environment variable `STATUSCAKE_RPS`
        /// </summary>
        public static int? Rps
        {
            get => _rps.Get();
            set => _rps.Set(value);
        }

        private static readonly __Value<string?> _statuscakeCustomEndpoint = new __Value<string?>(() => __config.Get("statuscakeCustomEndpoint"));
        /// <summary>
        /// Custom endpoint to which request will be made. This can also be provided as an environment variable
        /// `STATUCAKE_CUSTOM_ENDPOINT`
        /// </summary>
        public static string? StatuscakeCustomEndpoint
        {
            get => _statuscakeCustomEndpoint.Get();
            set => _statuscakeCustomEndpoint.Set(value);
        }

    }
}
